import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Gamepad;
import com.qualcomm.robotcore.util.Range;

import org.firstinspires.ftc.robotcore.external.navigation.AngleUnit;
import org.firstinspires.ftc.robotcore.external.navigation.AxesOrder;
import org.firstinspires.ftc.robotcore.external.navigation.AxesReference;
import org.firstinspires.ftc.robotcore.external.navigation.DistanceUnit;

@com.qualcomm.robotcore.eventloop.opmode.TeleOp(name="Simple Mechanum Tele-op", group="Teleop")

public class BasicMechanumTeleop extends LinearOpMode {

    BasicHardwareMap robot = new BasicHardwareMap();


    @Override
    public void runOpMode() {
        double ly;
        double rx;
        double lx;
        boolean slow_mode;
        boolean normal_mode;
        boolean a;

        robot.teleopInit(hardwareMap);

        // Send telemetry message to signify robot waiting;
        telemetry.addData("Say", "Hello Driver");
        telemetry.update();

        // Wait for the game to start (driver presses PLAY)
        waitForStart();


        // run until the end of the match (driver presses STOP)
        while (opModeIsActive()) {

        slow_mode = false;
        normal_mode = false;

            if (gamepad2.dpad_up){
                robot.armMotor.setTargetPosition(robot.ARM_UP);
                robot.armMotor.setPower(0.5);
            }
            else if (gamepad2.dpad_down){
                robot.armMotor.setTargetPosition(robot.ARM_DOWN);
                robot.armMotor.setPower(-0.5);
            }

            telemetry.addData("armMotor Encodor",robot.armMotor.getCurrentPosition());
            telemetry.update();

            if (gamepad2.a){
                robot.sweeper.setPosition(1);
            }
            else if (gamepad2.x){
                robot.sweeper.setPosition(0);
            }
            else robot.sweeper.setPosition(0.5);


            // Normal mode
            ly = -gamepad1.left_stick_y; //drive forward
            lx = gamepad1.left_stick_x; //strafe
            //todo above was negative, changed to fix
            rx = -gamepad1.right_stick_x; //turn

            if (Math.abs(ly) > robot.TELEOPDEADZONE ||
                    Math.abs(lx) > robot.TELEOPDEADZONE ||
                    Math.abs(rx) > robot.TELEOPDEADZONE) {

                normal_mode = true;
                slow_mode = false;
                // Compute the drive speed of each drive motor based on formula from redit
                double FL_power_raw = ly + lx - (rx * .7f);
                double FR_power_raw = ly - lx + (rx * .7f);
                double RL_power_raw = ly - lx - (rx * .7f);
                double RR_power_raw = ly + lx + (rx * .7f);

                //Clip the values generated by the above formula so that they never go outisde of -1 to 1
                double FL_power = Range.clip(FL_power_raw, -1, 1);
                double FR_power = Range.clip(FR_power_raw, -1, 1);
                double RL_power = Range.clip(RL_power_raw, -1, 1);
                double RR_power = Range.clip(RR_power_raw, -1, 1);

                if (!gamepad1.left_stick_button) { //This is normal mode
                    FL_power = FL_power * robot.NOTTURBOFACTOR;
                    FR_power = FR_power * robot.NOTTURBOFACTOR;
                    RL_power = RL_power * robot.NOTTURBOFACTOR;
                    RR_power = RR_power * robot.NOTTURBOFACTOR;
                }

                robot.leftFrontDrive.setPower(FL_power);
                robot.rightFrontDrive.setPower(FR_power);
                robot.leftRearDrive.setPower(RL_power);
                robot.rightRearDrive.setPower(RR_power);

                telemetry.addData("Encoder Value", robot.armMotor.getCurrentPosition());
                telemetry.update();
            }
            else {
                robot.stop();
            }


           /* //arm control section todo add when hardware is there
            if (gamepad2.dpad_left){
                robot.leftGrabberServo.setPosition(robot.LEFT_GRABBER_OPEN);
                robot.rightGrabberServo.setPosition(robot.RIGHT_GRABBER_OPEN);
            }
            else if (gamepad2.dpad_right){
                robot.leftGrabberServo.setPosition(robot.LEFT_GRABBER_CLOSED);
                robot.rightGrabberServo.setPosition(robot.RIGHT_GRABBER_CLOSED);
            }*/


        }
    }
}